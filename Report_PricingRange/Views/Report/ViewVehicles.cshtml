@model IEnumerable<Report_PricingRange.Models.PricedVehicle>

@{
    ViewBag.Title = "ViewVehicles";
    string PricingStatus = ViewBag.pstat;
    string LocCode = ViewBag.locd;
    string StockNum = ViewBag.stckn;
    string Make = ViewBag.Make;
    string ModelCar = ViewBag.mdlv;
    string ModelYear = ViewBag.yr;
    string MatrixYN = ViewBag.mxyn;
    string PricingTitle = "";
    string MatrixTitle = "";
    string CRExpired = ViewBag.crexp;
    string StyleName = ViewBag.styln;
    string TrimName = ViewBag.trmnm;
    string BucketDaysInInventory = ViewBag.bDay;
    string DaysBucketTitle = "";
    string ExpiredTitle = "";
    string ModelCode = ViewBag.mc;

    decimal CalculatedMarkup = 0;

    if (CRExpired != "")
    {
        ExpiredTitle = "(Rebate: " + CRExpired + ")";
    }


    // if there's no make but model is there, get the make
    if (Make.Trim() == "" && ModelCar.Trim() != "")
    {
        foreach (var item in Model)
        {

            if (item.ModelCode != "")
            {
                Make = item.MakeName;
            }
            break;
        }
    }

    if (BucketDaysInInventory != "" && BucketDaysInInventory != null)
    {
        DaysBucketTitle = BucketDaysInInventory + " Days";
    }

    switch (MatrixYN)
    {

        case "Y":
            MatrixTitle = "(Matrix Pricing)";
            break;

        case "N":
            MatrixTitle = "(Not Matrix Pricing)";
            break;
    }

    if (LocCode != "" && (Make + ModelCar) != "")
    {
        LocCode = "at " + LocCode;
    }

    switch (PricingStatus)
    {

        case "InStock":
            PricingTitle = "In-Stock";
            break;

        case "OnOrder":
            PricingTitle = "On-Order";
            break;

        case "InStock1":
            PricingTitle = "In-Stock MSRP+";
            break;

        case "InStock2":
            PricingTitle = "In-Stock MSRP";
            break;

        case "InStock3":
            PricingTitle = "In-Stock Invoice+200";
            break;

        case "InStock4":
            PricingTitle = "In-Stock Invoice Less 200";
            break;

        case "InStock5":
            PricingTitle = "In-Stock Less Than Invoice";
            break;

        case "OnOrder1":
            PricingTitle = "On-Order MSRP+";
            break;

        case "OnOrder2":
            PricingTitle = "On-Order MSRP";
            break;

        case "OnOrder3":
            PricingTitle = "On-Order Invoice+200";
            break;

        case "OnOrder4":
            PricingTitle = "On-Order Invoice Less 200";
            break;

        case "OnOrder5":
            PricingTitle = "On-Order Less Than Invoice";
            break;

    }

}

@section CSS
{
    <link rel="stylesheet" href="~/Scripts/Chosen/chosen.css">
    <link rel="stylesheet" href="~/Scripts/jquery-ui.css">

    <script type="text/javascript">
        var dialogWidth = 0;

        dialogWidth = ($(window).width() * .75);

        if ($(window).width() > 1199) {
            dialogWidth = 800;
        }
    </script>
}

<style type="text/css">

    .container {
        max-width: 100%;
    }

    th.text-center.sorting_asc {
        background-color: #FFFF7C;
    }

    th.text-center.sorting_desc {
        background-color: #FFFF7C;
    }

    td.text-center.sorting_1 {
        background-color: #FFFF7C !important;
    }

    .ui-widget-content a {
        color: #428bca;
    }

    @@media print {

        a[href]:after {
            content: "";
        }

        .btn-primary {
            display: none;
        }

        .report-parameters {
            display: none;
        }

        @@page {
            size: landscape;
        }
    }

    .report-parameters {
        background-color: #eee;
    }

    .hr-divider {
        border-color: #999;
        margin-top: 10px;
        margin-bottom: 10px;
    }

    .hr-separator {
        border-color: #999;
        border-style: dashed;
        margin-top: 10px;
        margin-bottom: 5px;
    }

    .table-bordered > thead > tr > th.divider-column, .table-bordered > tbody > tr > td.divider-column, .table-bordered > tfoot > tr > th.divider-column {
        border-right: 4px double #808080;
    }


    .changed:after {
        content: '\2212';
    }

    .changed {
        font-weight: bold;
    }

    .selected-row {
        background-color: #f7f4e0; /*#f5f5f5;*/
    }

    .display-none {
        display: none;
    }

    td > a.lead-detail-link:after {
        content: '\2023';
    }
</style>

<h2>@Make @ModelCar @ModelCode @ModelYear @LocCode @PricingTitle @MatrixTitle @ExpiredTitle @DaysBucketTitle @StyleName @TrimName</h2>

<div class="body-content">

    <table id="vehicleList" class="table display table-bordered order-column cell-border " cellpadding="2" cellspacing="0" style="font-size:16px; border-left: none;">
        <thead>
            <tr style="background-color:#d9edf7;">

                <th>
                    Stk#
                </th>
                <th>
                    St
                </th>

                <th>
                    Day
                </th>
                <th>
                    Loc
                </th>
                <th>
                    Make
                </th>
                <th>
                    Model
                </th>
                <th>
                    Mdl#
                </th>
                <th>
                    Yr
                </th>
                <th align="left">
                    MSRP
                </th>
                <th align="left">
                    Invc
                </th>
                <th align="left">
                    FLP
                </th>
                <th align="left">
                    MSRP%
                </th>
                <th align="left">
                    +/-MSRP +Inc
                </th>
                <th align="left">
                    +/-Invc +Inc
                </th>
                <th align="center">
                    Matrix
                </th>
                <th align="left">
                    MAAP
                </th>
                <th align="left">
                    CR$
                </th>
                <th align="left">
                    Exp
                </th>
                <th align="left">
                    MkUP
                </th>
                <th align="left">
                    MSRP/Inv
                </th>
                <th align="left">
                    FD$
                </th>
                <th align="left">
                    Exp
                </th>
                <th align="left">
                    Leads
                </th>
                <th align="left">
                    Leads 30
                </th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.ActionLink("$", "ViewVehicleHistory", new
                    {
                    vin = item.Vin
                    }
                    , new { @class = "btn btn-success btn-sm glyphicon" }
                    )

                    @Html.ActionLink("" + item.StockNumber, "GoToFitzMall", new { keywordSearch = item.Xrefid }, new { target = "_blank" })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VehicleStatus)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.DAYSININVENTORY)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LocationCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MakeCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ModelName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ModelCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ModelYear)
                </td>

                <td align="left">
                    @Html.DisplayFor(modelItem => item.MSRPPrice)
                </td>
                <td align="left">
                    @Html.DisplayFor(modelItem => item.InvoicePrice)
                </td>
                <td align="left">
                    @Html.DisplayFor(modelItem => item.InternetPrice)
                </td>
                <td align="left">
                    @Html.DisplayFor(modelItem => item.PercentageMSRP)%
                </td>
                <td align="left">
                    @Html.DisplayFor(modelItem => item.UnderMSRP)
                </td>
                <td align="left">
                    @Html.DisplayFor(modelItem => item.OverInvoice)
                </td>
                <td align="center">
                    @Html.DisplayFor(modelItem => item.MatrixPricing)

                </td>
                <td align="left">
                    @Html.DisplayFor(modelItem => item.MAPPrice)
                </td>
                <td align="left">
                    @if (item.CRAmount > 0)
                    {
                        @Html.DisplayFor(modelItem => item.CRAmount)
                    }
                </td>
                <td align="left">
                    @if (item.CRAmount > 0)
                    {
                        @item.CREndDate.ToString("MM/dd")
                    }
                </td>
                <td align="left">
                    @if (item.MatrixPricing == "N")
                    {
                        if (item.MSRPInvoiceFlag == "M")
                        {
                            CalculatedMarkup = (item.MSRPPrice - item.InternetPrice) - (item.CRAmount + item.FDAmount);
                        }
                        else
                        {
                            CalculatedMarkup = (item.InvoicePrice - item.InternetPrice) - (item.CRAmount + item.FDAmount);
                        }
                        @CalculatedMarkup
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.Markup)

                    }
                </td>
                <td align="center">
                    @Html.DisplayFor(modelItem => item.MSRPInvoiceFlag)
                </td>
                <td align="left">
                    @if (item.FDAmount > 0)
                    {
                        @Html.DisplayFor(modelItem => item.FDAmount)
                    }
                </td>
                <td align="left">
                    @if (item.FDAmount > 0)
                    {
                        @item.FDEndDate.ToString("MM/dd")
                    }
                </td>
                <td>
                    @if (item.Leads > 0)
                    {
                        @Html.ActionLink(("" + item.Leads), "VehicleLeads", new
                   {
                       stock = item.StockNumber
                   }, new { target = "_blank" })


                    }

                </td>
                <td>
                    @if (item.Leads30 > 0)
                    {
                        @Html.DisplayFor(modelItem => item.Leads30)
                    }

                </td>
            </tr>
            }
        </tbody>

  
    </table>

</div>

    <script>
        $('#vehicleList').DataTable({
            searching: true,
            dom: 'Bfrti',
            pageLength: -1,
            order: [[1, "desc"]],
            buttons: [
                {
                    extend: 'copyHtml5', footer: true,
                },
                {
                    extend: 'excelHtml5', footer: true,
                },
                {
                    extend: 'pdfHtml5', footer: true,
                    orientation: 'landscape'
                },
                {
                    extend: 'print', footer: true,
                    orientation: 'landscape'
                }
            ],
            retrieve: true
        });













    </script>
