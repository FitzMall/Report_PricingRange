@model IEnumerable<Report_PricingRange.Models.PricedVehicle>

@{
    ViewBag.Title = "ViewVehicles";
    string PricingStatus = ViewBag.PricingStatus;
    string LocCode = ViewBag.LocCode;
    string StockNum = ViewBag.StockNum;
    string Make = ViewBag.Make;
    string ModelCar = ViewBag.ModelCar;
    string MatrixYN = ViewBag.MatrixYN;
    string PricingTitle = "";
    string MatrixTitle = "";

    // if there's no make but model is there, get the make
    if (Make.Trim() == "" && ModelCar.Trim() != "") { 
        foreach (var item in Model)
        {

            if (item.ModelCode != "") 
            {
                Make = item.MakeName;
            }
            break;
        }
    }

    switch (MatrixYN)
    {

        case "Y":
            MatrixTitle = "(Matrix Pricing)";
            break;

        case "N":
            MatrixTitle = "(Not Matrix Pricing)";
            break;
    }

    if (LocCode != "" && (Make + ModelCar) != "")
    {
        LocCode = "at " + LocCode;
    }

    switch (PricingStatus)
    {

        case "InStock":
            PricingTitle = "In-Stock";
            break;

        case "OnOrder":
            PricingTitle = "On-Order";
            break;

        case "InStock1":
            PricingTitle = "In-Stock MSRP+";
            break;

        case "InStock2":
            PricingTitle = "In-Stock MSRP";
            break;

        case "InStock3":
            PricingTitle = "In-Stock Invoice+200";
            break;

        case "InStock4":
            PricingTitle = "In-Stock Invoice Less 200";
            break;

        case "InStock5":
            PricingTitle = "In-Stock Less Than Invoice";
            break;

        case "OnOrder1":
            PricingTitle = "On-Order MSRP+";
            break;

        case "OnOrder2":
            PricingTitle = "On-Order MSRP";
            break;

        case "OnOrder3":
            PricingTitle = "On-Order Invoice+200";
            break;

        case "OnOrder4":
            PricingTitle = "On-Order Invoice Less 200";
            break;

        case "OnOrder5":
            PricingTitle = "On-Order Less Than Invoice";
            break;

    }

}

@section CSS
{
    <link rel="stylesheet" href="~/Scripts/Chosen/chosen.css">
    <link rel="stylesheet" href="~/Scripts/jquery-ui.css">

    <script type="text/javascript">
        var dialogWidth = 0;

        dialogWidth = ($(window).width() * .75);

        if ($(window).width() > 1199) {
            dialogWidth = 800;
        }
    </script>
}

<style type="text/css">

    .container {
        max-width: 100%;
    }

    th.text-center.sorting_asc {
        background-color: #FFFF7C;
    }

    th.text-center.sorting_desc {
        background-color: #FFFF7C;
    }

    td.text-center.sorting_1 {
        background-color: #FFFF7C !important;
    }

    .ui-widget-content a {
        color: #428bca;
    }

    @@media print {

        a[href]:after {
            content: "";
        }

        .btn-primary {
            display: none;
        }

        .report-parameters {
            display: none;
        }

        @@page {
            size: landscape;
        }
    }

    .report-parameters {
        background-color: #eee;
    }

    .hr-divider {
        border-color: #999;
        margin-top: 10px;
        margin-bottom: 10px;
    }

    .hr-separator {
        border-color: #999;
        border-style: dashed;
        margin-top: 10px;
        margin-bottom: 5px;
    }

    .table-bordered > thead > tr > th.divider-column, .table-bordered > tbody > tr > td.divider-column, .table-bordered > tfoot > tr > th.divider-column {
        border-right: 4px double #808080;
    }


    .changed:after {
        content: '\2212';
    }

    .changed {
        font-weight: bold;
    }

    .selected-row {
        background-color: #f7f4e0; /*#f5f5f5;*/
    }

    .display-none {
        display: none;
    }

    td > a.lead-detail-link:after {
        content: '\2023';
    }
</style>

<h2>@Make @ModelCar @LocCode @PricingTitle @MatrixTitle </h2>


<table class="table table-bordered sticky-header" style="font-size:16px; border-left: none;">
    <tr style="background-color:#d9edf7;">
        <th>
            VIN
        </th>
        <th>
            Stock#
        </th>
        <th>
            Vehicle Status
        </th>

        <th>
            Condition
        </th>
        <th>
            Location
        </th>
        <th>
            Make
        </th>
        <th>
            Make
        </th>

        <th align="right">
            Internet $
        </th>
        <th align="right">
            Delivered $
        </th>
        <th align="right">
            Invoice
        </th>
        <th align="right">
            MSRP
        </th>
        <th align="right">
            KBB
        </th>
        <th>
            Matrix?
        </th>
        <th align="right">
            MAAP
        </th>
        <th align="right">
            Lowest MAAP
        </th>
    </tr>

    @foreach (var item in Model)
    {
<tr>
    <td>
        @Html.ActionLink("" + item.Vin, "GoToFitzMall", new { keywordSearch = item.Xrefid }, new { target = "_blank" })
    </td>
    <td>
        @Html.ActionLink("" + item.StockNumber, "GoToFitzMall", new { keywordSearch = item.Xrefid }, new { target = "_blank" })
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.VehicleStatus)
    </td>

    <td>
        @Html.DisplayFor(modelItem => item.VehicleCondition)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.LocationCode)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.MakeName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.ModelName)
    </td>

    <td align="right">
        @Html.DisplayFor(modelItem => item.InternetPrice)
    </td>
    <td align="right">
        @Html.DisplayFor(modelItem => item.DeliveredPrice)
    </td>
    <td align="right">
        @Html.DisplayFor(modelItem => item.InvoicePrice)
    </td>
    <td align="right">
        @Html.DisplayFor(modelItem => item.MSRPPrice)
    </td>
    <td align="right">
        @Html.DisplayFor(modelItem => item.KBBPrice)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.MatrixPricing)
    </td>
    <td align="right">
        @Html.DisplayFor(modelItem => item.MAPPrice)
    </td>
    <td align="right">
        @Html.DisplayFor(modelItem => item.LowestMAAPPrice)
    </td>

</tr>
    }

    <tr>
        <td>
            @Model.Count() vehicles
        </td>
    </tr>

</table>
