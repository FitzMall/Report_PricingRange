@model Report_PricingRange.Models.ReportTemplateModel

@{
    ViewBag.Title = "Template Report";
    var applicationPath = Request.ApplicationPath;

    if (applicationPath == "/")
    {
        applicationPath = "";
    }

    var storeLocations = new List<string>();

    var breakDowns = new List<string>();
    var breakDownValues = new List<string>();

    breakDowns.Add("Location");
    breakDownValues.Add("LocationCode");

    breakDowns.Add("Make Name");
    breakDownValues.Add("MakeName");

    breakDowns.Add("Model Name");
    breakDownValues.Add("ModelName");

    breakDowns.Add("Matrix");
    breakDownValues.Add("MatrixPricing");

    breakDowns.Add("Days In Inventory");
    breakDownValues.Add("BucketDaysInInventory");

    breakDowns.Add("CR Expired");
    breakDownValues.Add("CRExpired");

    breakDowns.Add("Style");
    breakDownValues.Add("StyleName");

    breakDowns.Add("Model Year");
    breakDownValues.Add("ModelYear");

}
@section CSS
{
    <link rel="stylesheet" href="~/Scripts/Chosen/chosen.css">
    <link rel="stylesheet" href="~/Scripts/jquery-ui.css">

    <script type="text/javascript">
        var dialogWidth = 0;

        dialogWidth = ($(window).width() * .75);

        if ($(window).width() > 1199) {
            dialogWidth = 800;
        }
    </script>
}

<style type="text/css">

    .container {
        max-width: 100%;
    }

    th.text-center.sorting_asc {
        background-color: #FFFF7C;
    }

    th.text-center.sorting_desc {
        background-color: #FFFF7C;
    }

    td.text-center.sorting_1 {
        background-color: #FFFF7C !important;
    }

    .ui-widget-content a {
        color: #428bca;
    }

    @@media print {

        a[href]:after {
            content: "";
        }

        .btn-primary {
            display: none;
        }

        .report-parameters {
            display: none;
        }

        @@page {
            size: landscape;
        }
    }

    .report-parameters {
        background-color: #eee;
    }

    .hr-divider {
        border-color: #999;
        margin-top: 10px;
        margin-bottom: 10px;
    }

    .hr-separator {
        border-color: #999;
        border-style: dashed;
        margin-top: 10px;
        margin-bottom: 5px;
    }

    .table-bordered > thead > tr > th.divider-column, .table-bordered > tbody > tr > td.divider-column, .table-bordered > tfoot > tr > th.divider-column {
        border-right: 4px double #808080;
    }

 
    .changed:after {
        content: '\2212';
    }

    
    td:first-child > a:after {
        content: '\002B';
    }

    .changed {
        font-weight: bold;
    }

    .selected-row {
        background-color: #f7f4e0; /*#f5f5f5;*/
    }

    .display-none {
        display: none;
    }

    td:first-child > a.lead-detail-link:after {
        content: '\2023';
    }
</style>


<div class="row" style="margin-top:25px;">
    <div class="col-sm-2 report-parameters">
        <h2>Price Range Report</h2>
        <h3></h3>
        @using (Html.BeginForm())
        {
            <div class="row">
                <div class="col-sm-12">
                    <hr class="hr-divider" />
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <strong>Breakdowns:</strong>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <select id="breakdown1" name="breakdown1" class="form-control form-inline">
                        <option value=""></option>

                        @{
                            var index = 0;
                            foreach (var breakdown in breakDowns)
                            {
                                <option value="@breakDownValues[index]" @(Model.BreakDownLevel1 == breakDownValues[index] ? "selected" : "")>@breakdown</option>
                                index += 1;
                            }

                        }


                    </select>
                </div>
            </div>
            <div class="row" style="margin-top:10px">
                <div class="col-sm-12">
                    <select id="breakdown2" name="breakdown2" class="form-control form-inline">
                        <option value=""></option>
                        @{
                            var index2 = 0;
                            foreach (var breakdown in breakDowns)
                            {
                                if (@breakDownValues[index2] != Model.BreakDownLevel1)
                                {
                                    <option value="@breakDownValues[index2]" @(Model.BreakDownLevel2 == breakDownValues[index2] ? "selected" : "")>@breakdown</option>
                                }
                                index2 += 1;
                            }

                        }

                    </select>
                </div>
            </div>
            <div class="row" style="margin-top:10px">
                <div class="col-sm-12">
                    <select id="breakdown3" name="breakdown3" class="form-control form-inline">
                        <option value=""></option>
                        @{
                            var index3 = 0;
                            foreach (var breakdown in breakDowns)
                            {
                                if (breakDownValues[index3] != Model.BreakDownLevel2 && breakDownValues[index3] != Model.BreakDownLevel1)
                                {
                                    <option value="@breakDownValues[index3]" @(Model.BreakDownLevel3 == breakDownValues[index3] ? "selected" : "")>@breakdown</option>
                                }
                                index3 += 1;
                            }

                        }
                    </select>
                </div>
            </div>
            <div class="row" style="margin-top:10px">
                <div class="col-sm-12">
                    <select id="breakdown4" name="breakdown4" class="form-control form-inline">
                        <option value=""></option>
                        @{
                            var index4 = 0;
                            foreach (var breakdown in breakDowns)
                            {
                                if (breakDownValues[index4] != Model.BreakDownLevel3 && breakDownValues[index4] != Model.BreakDownLevel2 && breakDownValues[index4] != Model.BreakDownLevel1)
                                {
                                    <option value="@breakDownValues[index4]" @(Model.BreakDownLevel4 == breakDownValues[index4] ? "selected" : "")>@breakdown</option>
                                }
                                index4 += 1;
                            }

                        }
                    </select>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <hr class="hr-divider" />
                </div>
            </div>
            <div class="row" style="margin-bottom: 15px;">
                <div class="col-sm-12 text-right">
                    <button class="btn btn-primary" type="submit" value="submit" name="Submit">Submit</button>

                </div>
            </div>


        }


    </div>
    <div class="col-md-10">
        <div class="row">



            @Html.Partial("_TemplateReportByBreakdowns", Model)



            
        </div>
    </div>

</div>



@section scripts{

    <script type="text/javascript">

        //Set multiple values for a chosen select
        //var my_val = 3,4,6;
        //var str_array = my_val.split(',');
        //$("#set-corsi").val(str_array).trigger("chosen:updated");

        $(document).ready(function () {

            $("#breakdown1").change(function () {


                $("#breakdown2").empty();
                $("#breakdown3").empty();
                $("#breakdown4").empty();
                $("#breakdown2").append("<option value=''></option>");
                $('#breakdown1 option').each(function () {

                    if ($("#breakdown1").val() != $(this).attr('value') && $(this).attr('value') != '') {
                        $("#breakdown2").append("<option value='" + $(this).attr('value') + "'>" + $(this).text() + "</option>");
                    }
                });

            });

            $("#breakdown2").change(function () {


                $("#breakdown3").empty();
                $("#breakdown4").empty();
                $("#breakdown3").append("<option value=''></option>");
                $('#breakdown2 option').each(function () {

                    if ($("#breakdown2").val() != $(this).attr('value') && $(this).attr('value') != '') {
                        $("#breakdown3").append("<option value='" + $(this).attr('value') + "'>" + $(this).text() + "</option>");
                    }
                });

            });

            $("#breakdown3").change(function () {


                $("#breakdown4").empty();
                $("#breakdown4").append("<option value=''></option>");
                $('#breakdown3 option').each(function () {

                    if ($("#breakdown3").val() != $(this).attr('value') && $(this).attr('value') != '') {
                        $("#breakdown4").append("<option value='" + $(this).attr('value') + "'>" + $(this).text() + "</option>");
                    }
                });

            });



            $('#chkComparison').click(function () {

                if ($(".comparison-row").is(':visible')) {
                    $('.comparison-row').hide();
                }
                else {
                    $('.comparison-row').show();
                }

            });


        });

    </script>
}